buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    //id "org.asciidoctor.convert" version "1.5.9.2"
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'dev.greatseo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs')
//}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'BOOT-INF/classes/static/docs'
    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.7'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // 모델 mapper : entity -> dto
    // SpringMapperConfig에 정의됨
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation group: 'com.google.guava', name: 'guava', version: '20.0'

    //querydsl dependencies 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.h2database:h2'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

build {
    dependsOn copyDocument
}